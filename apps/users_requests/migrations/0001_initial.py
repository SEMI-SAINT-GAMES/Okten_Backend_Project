# Generated by Django 4.2.6 on 2023-11-13 19:35

import core.services.upload_avatar
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrencyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('toCur', models.CharField(max_length=30)),
                ('fromCur', models.CharField(max_length=30)),
                ('buy', models.FloatField()),
                ('sale', models.FloatField()),
            ],
            options={
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='PartRequestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('car_brand', models.CharField(choices=[('Acura', 'acura'), ('Alfa Romeo', 'alfa-romeo'), ('Audi', 'audi'), ('BMW', 'bmw'), ('Chevrolet', 'chevrolet'), ('Citroen', 'citroen'), ('Dacia', 'dacia'), ('Fiat', 'fiat'), ('Ford', 'ford'), ('Honda', 'honda'), ('Hyundai', 'hyundai'), ('Jaguar', 'jaguar'), ('Jeep', 'jeep'), ('Kia', 'kia'), ('Land Rover', 'land-rover'), ('Lexus', 'lexus'), ('Mazda', 'mazda'), ('Mercedes-Benz', 'mercedes-benz'), ('Mitsubishi', 'mitsubishi'), ('Nissan', 'nissan'), ('Opel', 'opel'), ('Peugeot', 'peugeot'), ('Porsche', 'porsche'), ('Renault', 'renault'), ('Seat', 'seat'), ('Skoda', 'skoda'), ('Subaru', 'subaru'), ('Suzuki', 'suzuki'), ('Tesla', 'tesla'), ('Toyota', 'toyota'), ('Volkswagen', 'volkswagen'), ('Volvo', 'volvo')], max_length=30)),
                ('car_model', models.CharField(max_length=30)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1920), django.core.validators.MaxValueValidator(2023)])),
                ('fuel', models.CharField(choices=[('Gas', 'gas'), ('Diesel', 'diesel'), ('LPG', 'lpg')], max_length=30)),
                ('gear_box', models.CharField(choices=[('Automatic', 'automatic'), ('Manual', 'manual'), ('Variator', 'variator')], max_length=30)),
                ('engine_volume', models.FloatField(validators=[django.core.validators.MinValueValidator(0.2), django.core.validators.MaxValueValidator(10.0)])),
                ('drive_unit', models.CharField(choices=[('Front', 'front'), ('Rear', 'rear'), ('Full', 'full')], max_length=30)),
                ('body_type', models.CharField(choices=[('Седан', 'sedan'), ('Хетчбек', 'hatchback'), ('Універсал', 'wagon'), ('Купе', 'coupe'), ('Кабріолет', 'convertible'), ('Спорткар', 'sports-car'), ('Позашляховик', 'suv'), ('Кросовер', 'crossover'), ('Мінівен', 'minivan'), ('Пікап', 'pickup'), ('Фургон', 'van')], max_length=20)),
                ('region_of_car', models.CharField(choices=[('АР Крим', 'arkrym'), ('Вінницька', 'vinnytska'), ('Волинська', 'volynska'), ('Дніпропетровська', 'dnipropetrovska'), ('Донецька', 'donetska'), ('Житомирська', 'zhytomyrska'), ('Закарпатська', 'zakarpatska'), ('Івано-Франківська', 'ivano-frankivska'), ('Київська', 'kyivska'), ('Кіровоградська', 'kirovohradska'), ('Луганська', 'luhanska'), ('Львівська', 'lvivska'), ('Миколаївська', 'mykolaivska'), ('Одеська', 'odeska'), ('Полтавська', 'poltavska'), ('Рівненська', 'rivnenska'), ('Сумська', 'sumska'), ('Тернопільська', 'ternopilska'), ('Харківська', 'kharkivska'), ('Херсонська', 'khersonska'), ('Хмельницька', 'khmelnytska'), ('Черкаська', 'cherkaska'), ('Чернівецька', 'chernivetska'), ('Чернігівська', 'chernihivska')], max_length=20)),
                ('vin', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('\\b[(A-H|J-N|P|R-Z|0-9)]{17}\\b', 'OEM must be 17 symbols')])),
                ('about', models.CharField(max_length=10000)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(100)])),
                ('currency', models.CharField(choices=[('uah', 'UAH'), ('usd', 'USD'), ('eur', 'EUR')], max_length=3)),
                ('view_count', models.IntegerField(default=0)),
                ('photo', models.ImageField(blank=True, upload_to=core.services.upload_avatar.upload_photo_for_request)),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='part_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'car_requests',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CheckModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checker', models.IntegerField()),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_requests.partrequestmodel')),
            ],
            options={
                'db_table': 'check_valid',
            },
        ),
    ]
